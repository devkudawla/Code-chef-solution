#include <bits/stdc++.h>
using namespace std;

long long int goodCharacters(int N, int K, string &s)
{
	long long int ans = 0;
	for(char i = 'a'; i <= 'z'; ++i)
    {
        unordered_map<int, int> mp;
        if(s[0]==i)
        {
        mp[0] = 1;
        }
        int temp = 0;
        int index = 0;
        while(index < N)
        {
            int j = index;
            int temp1 = temp;
            while(j < N && (j==index || s[j]!=i))
            {
                if(s[j]==i)
                {
                    temp1++;
                }
                else
                {
                    temp1--;
                }
                if(mp.find(temp1-K)!=mp.end())
                {
                ans+=mp[temp1-K];
                }
                j++;
            }
            j = index;
            while(j < N && (j==index || s[j]!=i))
            {
                if(s[j]==i)
                {
                    temp++;
                }
                else
                {
                    temp--;
                }
                mp[temp]++;
                j++;
            }
            if(j==N)
            {
                break;
            }
            if(mp[0] == 0)
            mp[0] = 1;
            index = j;
        }
    }
    return ans;
}

void solve()
{
    int n;
    cin>>n;
    assert(1<=n&&n<=1e5);
    int k;
    cin>>k;
    assert(-1e5<=k&&k<=1e5);
    string s;
    cin>>s;
    for(int i = 0; i < n; ++i)
    {
        assert('a'<=s[i]&&s[i]<='z');
    }
    long long int ans = goodCharacters(n, k, s);
    cout<<ans<<endl;
}

int main() {
    int t;
    cin>>t;
    assert(1<=t && t<=100);
    while(t--)
    {
    solve();
    }
}
